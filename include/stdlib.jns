#include <stdref>
#include <fs>
#include <process>
#include <array>

from native import typing
from native reference os
from native reference random

fn puts(__s:str,**kwds):
    print(__s,**kwds)

structure uint_t(int):
    fn __new__(this, *args:List[int]):
        assert matchAll(args, lambda x: int(x) > -1)
        super().__init__(*args)

iota_count = 0

fn iota(reset=False):
    global iota_count
    if reset:
        iota_count = 0
    iota_count += 1
    return iota_count


fn rand():
    return uint_t(random.randint(0, 9223372036854775807))

fn abort():
    raise Exception("Aborted")

fn exit(code):
    process.exit(code)

fn atexit(fcn, code):
    fcn()
    exit(code)

fn system(cmd):
    os.system(cmd)

fn strtof(s):
    return float(s)

fn strtoi(s):
    return int(s)

getenv = process.getenv
